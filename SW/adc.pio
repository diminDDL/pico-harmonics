.program adc
.side_set 1

; one CONV pin as pins, one CLK pin as sideset, one SDI as in pin
.wrap_target
set pins 0                      side 0          ; pull CONV low
set x, 15                       side 0          ; 16 transfers
bitloop:
    nop              [1]        side 1
    in pins, 1                  side 1          ; read SDI bit
    jmp x-- bitloop  [2]        side 0          ; loop until x == 0
set pins 1           [15]       side 1          ; pull CONV high
.wrap


% c-sdk {
static inline void adc_program_init(PIO pio, uint sm, uint offset, float div, uint clock, uint conv, uint sdi) {
    
    pio_sm_config c = adc_program_get_default_config(offset);

    sm_config_set_in_pins(&c, sdi);
    sm_config_set_set_pins(&c, conv, 1);
    sm_config_set_sideset_pins(&c, clock);

    pio_gpio_init(pio, conv);
    pio_gpio_init(pio, sdi);
    pio_gpio_init(pio, clock);

    pio_sm_set_pindirs_with_mask(pio, sm, 1u << conv | 1u << clock, 1u << conv | 1u << clock | 1u << sdi);
    //pio_sm_set_consecutive_pindirs(pio, sm, clock, 1, true);

    sm_config_set_in_shift(&c, false, true, 16);

    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
}
%}